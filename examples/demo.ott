--
-- demo.ott - playing with opetopic type theory
--

let identity : (X : Type) -> X -> X
    	     = \X. \x. x ;

let test : (X : Type) -> (i : [ box X (pt (obj X)) ]) -> (j : [ box X (pt (obj X)) ]) -> 
    	   (x : [ obj X ]>> [ box i leaf ]) -> (y : [ obj X ]>> [ box i leaf ]) -> 
	   (f : [ obj X ]>> [ box i leaf ]>> [ box y (node (dot x) leaf ) ]) -> Unit
    	 = \X. \i. \j. \x. \y. \f. tt ; 

tt